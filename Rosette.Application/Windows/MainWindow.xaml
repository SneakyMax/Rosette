<Window x:Class="Rosette.Windows.MainWindow"
        xmlns:w="clr-namespace:Rosette.Windows"
        xmlns:c="clr-namespace:Rosette.Windows.Controls"
        xmlns:convert="clr-namespace:Rosette.Windows.Converters"
        xmlns:colorizers="clr-namespace:Rosette.Fractals.Colorization"
        xmlns:d="clr-namespace:Rosette.Data"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="600" Width="850" ResizeMode="CanResize" WindowStyle="None">
    <Window.Resources>
        <!-- Converters (See Windows/Converters) -->
        <convert:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <convert:DimensionsConverter x:Key="DimensionsConverter" />
        <convert:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <convert:ColorStringConverter x:Key="ColorStringConverter" />

        <!-- Template for buttons on the top menu bar. -->
        <ControlTemplate TargetType="{x:Type c:RoundedButton}" x:Key="TopMenuBarButtonTemplate">
            <Border CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="Black" BorderThickness="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="#ffe53d" Offset="0" />
                        <GradientStop Color="#ab830c" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <Ellipse Name="HighlightGlow" Visibility="Hidden">
                        <Ellipse.Fill>
                            <RadialGradientBrush Center="0.5,0.5">
                                <GradientStop Color="White" Offset="0" />
                                <GradientStop Color="Transparent" Offset="1" />
                            </RadialGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-1,0,0" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="HighlightGlow" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="HighlightGlow" Property="Fill">
                        <Setter.Value>
                            <RadialGradientBrush Center="0.5,0.5">
                                <GradientStop Color="LightGray" Offset="0" />
                                <GradientStop Color="Transparent" Offset="1" />
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Template for right column expanders.-->
        <ControlTemplate TargetType="{x:Type Expander}" x:Key="ControlsExpanderTemplate">
            <Grid>
                <Border x:Name="ExpandSite" Margin="4,25,4,5" Visibility="Visible" BorderBrush="DarkGray" BorderThickness="1,0,1,1">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="White" Offset="0" />
                            <GradientStop Color="#EBEEF0" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" Margin="5,10,5,5" />
                </Border>
                <ToggleButton IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="32"
                              FontWeight="Bold" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border CornerRadius="10" Margin="2" BorderThickness="1" BorderBrush="Gray">
                                <Border.Background>
                                    <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#C9B22A" Offset="0" />
                                        <GradientStop Color="#ffe59e" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Path x:Name="DownArrow" Margin="12,10,0,0" Stroke="Black" StrokeThickness="2" Data="M 0 0 L 5 7 L 10 0" Visibility="Visible" />
                                    <Path x:Name="UpArrow" Margin="12,10,0,0" Stroke="Black" StrokeThickness="2" Data="M 0 7 L 5 0 L 10 7" Visibility="Collapsed" />

                                    <Ellipse x:Name="Circle" Stroke="DarkGray" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" Width="20" Height="20" Margin="7,0,0,0" />
                                    
                                    <Ellipse x:Name="HighlightGlow" Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush Center="0.5,0.5">
                                                <GradientStop Color="#ccffffff" Offset="0" />
                                                <GradientStop Color="Transparent" Offset="1" />
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" Margin="30,5,0,0" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Circle" Property="Stroke" Value="Gray" />
                                    <Setter TargetName="HighlightGlow" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Circle" Property="Stroke" Value="DarkBlue" />
                                    <Setter TargetName="HighlightGlow" Property="Fill">
                                        <Setter.Value>
                                            <RadialGradientBrush Center="0.5,0.5">
                                                <GradientStop Color="#ccEAECED" Offset="0" />
                                                <GradientStop Color="Transparent" Offset="1" />
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DownArrow" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="UpArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter TargetName="ExpandSite" Property="Visibility" Value="Collapsed" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    
    <!-- The main grid for all controls. Only the main area and overlays should go here. -->
    <Grid>
        <!-- The main dock panel for all controls. -->
        <DockPanel>
            <!-- Menu and title bar header. -->
            <Border DockPanel.Dock="Top" Height="40" BorderBrush="Gray" BorderThickness="0,0,0,1" Name="TopMenuBar" MouseLeftButtonDown="TopMenuBar_MouseLeftButtonDown">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="#cfbc4f" Offset="0" />
                        <GradientStop Color="#ffe59e" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="Rosette" FontSize="22" FontWeight="Bold" />
                    <c:RoundedButton Content="X" Height="23" Template="{StaticResource TopMenuBarButtonTemplate}" Margin="0,8,6,0" Command="{Binding Commands.CloseWindowCommand}" 
                        CornerRadius="10,10,10,10" VerticalAlignment="Top" HorizontalAlignment="Right" Width="27" />
                    <c:RoundedButton Content="_" Template="{StaticResource TopMenuBarButtonTemplate}" Height="23" Margin="0,8,39,0" Command="{Binding Commands.MinimizeWindowCommand}"
                        CornerRadius="10,10,10,10" HorizontalAlignment="Right" Width="27" VerticalAlignment="Top" />
                    <c:RoundedButton Content="Menu" Template="{StaticResource TopMenuBarButtonTemplate}" Height="32" 
                        CornerRadius="0,0,15,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="84" FontSize="16" />
                </Grid>
            </Border>

            <!-- Controls panel. -->
            <Border DockPanel.Dock="Right" Width="200" BorderBrush="Gray" BorderThickness="1,0,0,0" Margin="1,0,0,0" Panel.ZIndex="1">
                <Grid>
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="White" Offset="0" />
                            <GradientStop Color="#EAECED" Offset="1" />
                        </LinearGradientBrush>
                    </Grid.Background>
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Top" ClipToBounds="False">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type Expander}">
                                    <Setter Property="Template" Value="{StaticResource ControlsExpanderTemplate}" />
                                </Style>
                            </StackPanel.Resources>

                            <!-- Fractal Controls -->
                            <Expander Header="Fractal" IsExpanded="True">
                                <Grid>
                                    <ComboBox Height="23" HorizontalAlignment="Stretch" Margin="5,25,5,10" VerticalAlignment="Top" ItemsSource="{Binding AvailableFractals}" SelectedItem="{Binding SelectedFractal}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding FriendlyName}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <Label Content="Available Fractals" Height="28" HorizontalAlignment="Left" Margin="6,1,0,0" VerticalAlignment="Top" Width="151" />
                                    <Label Content="{Binding ScreenCoordinatesIterations}" Height="28" Width="80" Margin="0,70,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" />
                                    <Label Content="Cursor Point Iterations" Height="28" HorizontalAlignment="Right" Margin="0,54,10,0" VerticalAlignment="Top" FontSize="10" />
                                </Grid>
                            </Expander>

                            <!-- Color Controls -->
                            <Expander Header="Colors" IsExpanded="True">
                                <Grid>
                                    <Label Content="Available Colorizers" Height="28" HorizontalAlignment="Left" Margin="6,1,0,0" VerticalAlignment="Top" Width="151" />
                                    <ComboBox Height="23" HorizontalAlignment="Left" Margin="5,25,5,10" VerticalAlignment="Top" Width="152" SelectedItem="{Binding SelectedColorizer}" ItemsSource="{Binding AvailableColorizations}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding FriendlyName}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <Grid Margin="5,55,5,10" Height="200" Visibility="{Binding IsColorListColorizer, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Collapse}">
                                        <Grid DataContext="{Binding SelectedColorizer}">
                                            <Border Height="30" VerticalAlignment="Top" Background="White" BorderBrush="Gray" BorderThickness="1" MouseLeftButtonDown="InnerColorBox_MouseLeftButtonDown">
                                                <Grid>
                                                    <Border BorderBrush="Gray" BorderThickness="1" Background="{Binding InnerColor, Converter={StaticResource ColorToBrushConverter}}" Width="25" Height="25" HorizontalAlignment="Left" Margin="5,0,0,0" />
                                                    <Label Content="Inner Color" Margin="35,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                                </Grid>
                                            </Border>
                                            <c:RoundedButton Width="16" Height="16" Template="{StaticResource TopMenuBarButtonTemplate}" Content="+" HorizontalAlignment="Right" 
                                                             Command="{Binding AddColorToListCommand}" VerticalAlignment="Top" Margin="0,32,0,0" Panel.ZIndex="1" />
                                            <ListView Margin="0,50,0,0" ItemsSource="{Binding Colors}" Name="ColorListColors" SelectionMode="Single" IsSynchronizedWithCurrentItem="True" HorizontalContentAlignment="Stretch">
                                                <ListView.Resources>
                                                    <Style TargetType="{x:Type ListViewItem}">
                                                        <EventSetter Event="MouseDoubleClick" Handler="ColorListItem_MouseDoubleClick" />
                                                    </Style>
                                                </ListView.Resources>
                                                <ListView.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type d:Color}">
                                                        <Grid Height="27">
                                                            <Border BorderBrush="Gray" BorderThickness="1" Background="{Binding Converter={StaticResource ColorToBrushConverter}}" 
                                                                    Width="25" Height="25" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,0,0,0" />
                                                            <Label Content="{Binding Converter={StaticResource ColorStringConverter}}" Margin="30,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="10" />
                                                            <c:RoundedButton HorizontalAlignment="Right" VerticalAlignment="Center" Content="X" CornerRadius="5" Width="15" Height="15" 
                                                                    Template="{StaticResource TopMenuBarButtonTemplate}" FontSize="10" Margin="0,0,5,0" Click="ColorListItem_RemoveClick" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <!-- Image Controls -->
                            <Expander Header="Image" IsExpanded="True">
                                <Grid>
                                    <Button Content="Save" Command="{Binding Commands.SaveImageCommand}" Height="23" Name="btnSave" Margin="5,75,5,10" VerticalAlignment="Top" />
                                    <Label Content="Image Width:" Height="28" HorizontalAlignment="Left" Margin="6,6,0,0" Name="label3" VerticalAlignment="Top" Width="90" />
                                    <Label Content="Image Height:" Height="28" HorizontalAlignment="Left" Margin="6,28,0,0" Name="label4" VerticalAlignment="Top" Width="90" />
                                    <TextBlock Height="23" Margin="88,11,6,0" Text="{Binding ImageProvider.Dimensions, Converter={StaticResource DimensionsConverter}, ConverterParameter=Width}" VerticalAlignment="Top" />
                                    <TextBlock Height="23" Margin="88,33,6,0" Text="{Binding ImageProvider.Dimensions, Converter={StaticResource DimensionsConverter}, ConverterParameter=Height}" VerticalAlignment="Top" Width="68" />
                                </Grid>
                            </Expander>

                            <!-- Rendering Controls -->
                            <Expander Header="Rendering" IsExpanded="True">
                                <Grid>
                                    <Button Content="Render" Height="23" Command="{Binding Commands.LoadFractalCommand}" Margin="5,75,5,10" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
                                    <Slider Height="23" Margin="4,23,59,0" VerticalAlignment="Top" Minimum="1" Maximum="1000" Value="{Binding MaximumIterations, UpdateSourceTrigger=PropertyChanged}" LargeChange="100" SmallChange="1" Width="116" />
                                    <TextBox Height="23" HorizontalAlignment="Right" Margin="0,23,6,0" VerticalAlignment="Top" Width="44" Text="{Binding MaximumIterations, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Content="Maximum Iterations" Height="28" Margin="4,-1,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="116" />
                                </Grid>
                            </Expander>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>

            <!-- Main mandelbrot area. -->
            <Border DockPanel.Dock="Left">
                <Grid w:SizeObserver.Observe="True" 
              w:SizeObserver.ObservedWidth="{Binding ImageAreaWidth, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
              w:SizeObserver.ObservedHeight="{Binding ImageAreaHeight, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                    <Image Source="{Binding ImageProvider.Image}" Panel.ZIndex="0" />
                    <Canvas Name="ImageCoverCanvas" Background="Transparent" 
                    MouseLeftButtonDown="ImageCoverCanvas_MouseLeftButtonDown" MouseMove="ImageCoverCanvas_MouseMove" 
                    MouseLeftButtonUp="ImageCoverCanvas_MouseLeftButtonUp" MouseRightButtonUp="ImageCoverCanvas_MouseRightButtonUp" />
                    <Grid DataContext="{Binding AsyncLoader}" Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}" Background="#aa000000" Panel.ZIndex="1" c:DesignMode.IsHidden="True">
                        <c:GifImage Uri="pack://application:,,,/Windows/Content/loading.gif" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </Grid>
            </Border>
        </DockPanel>
        
        <Grid Background="#aa000000" Visibility="{Binding ColorPickerIsOpen, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Collapse}" c:DesignMode.IsHidden="True">
            <c:ColorPicker x:Name="ColorPicker" />
        </Grid>
    </Grid>
</Window>
